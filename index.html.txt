<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Infinity Check-In & Out System</title>
  <script src="https://cdn.jsdelivr.net/npm/emailjs-com@3/dist/email.min.js"></script>
  <style>
    body { font-family: Arial, sans-serif; background: #f3f3f3; text-align: center; margin-top: 50px; }
    input, select { padding: 10px; width: 200px; margin: 5px; }
    button { padding: 10px 20px; margin: 5px; cursor: pointer; }
    .hidden { display: none; }
    table { margin: 0 auto; border-collapse: collapse; }
    th, td { border: 1px solid #333; padding: 8px; }
    .small { font-size: 12px; color: #555; }
  </style>
</head>
<body>
  <h1>Infinity Check-In & Out System</h1>

  <div id="login-form">
    <input type="text" id="login-username" placeholder="Username"><br>
    <input type="password" id="login-password" placeholder="Password"><br>
    <button onclick="signIn()">Sign In</button>
    <button onclick="showSignUp()">Sign Up</button>
  </div>

  <div id="signup-form" class="hidden">
    <input type="text" id="signup-username" placeholder="Username"><br>
    <input type="email" id="signup-email" placeholder="Email"><br>
    <input type="password" id="signup-password" placeholder="Password"><br>
    <button onclick="signUp()">Sign Up</button>
    <button onclick="cancelSignUp()">Cancel</button>
  </div>

  <div id="verify-form" class="hidden">
    <p>Enter the code sent to your email:</p>
    <input type="text" id="verification-code" placeholder="123456"><br>
    <button onclick="verifyCode()">Verify Email</button><br>
    <button onclick="resendVerification()">Resend Verification Email</button>
  </div>

  <div id="user-panel" class="hidden">
    <h2>Hello, <span id="user-name"></span>!</h2>
    <button onclick="goToForm()">Check-In OR Check-Out</button><br>
    <button onclick="signOut()">Sign Out</button>
  </div>

  <div id="admin-panel" class="hidden">
    <h2>Admin Panel</h2>
    <button onclick="goToForm()">Check-In OR Check-Out</button>
    <button onclick="resetUsers()">Reset All Users</button>
    <button onclick="syncAllToSheet()">Sync All to Google Sheet</button>
    <button onclick="importUsersFromSheet()">Import Users from Google Sheet</button>

    <h3>Change Admin Password</h3>
    <input type="password" id="new-admin-password" placeholder="New Password">
    <button onclick="changeAdminPassword()">Update Password</button>

    <h3>Create New User</h3>
    <input type="text" id="new-username" placeholder="Username">
    <input type="email" id="new-email" placeholder="Email">
    <input type="password" id="new-password" placeholder="Password">
    <button onclick="createUser()">Create User</button>

    <h3>User List</h3>
    <input type="text" id="user-search" placeholder="Search username..." oninput="filterUsers()">
    <table>
      <thead>
        <tr><th>Username</th><th>Email</th><th>Status</th><th>Actions</th></tr>
      </thead>
      <tbody id="user-list"></tbody>
    </table>

    <h3>Login Logs</h3>
    <div id="log-container" class="small"></div>
    <br><button onclick="signOut()">Sign Out</button>
  </div>

  <div id="manual-verification-panel" class="hidden">
    <h3>Manual Code Verification</h3>
    <p id="manual-verification-username"></p>
    <input type="text" id="manual-code-input" placeholder="Enter verification code">
    <button onclick="adminVerifyUserCode()">Verify User</button>
    <button onclick="cancelManualVerification()">Cancel</button>
  </div>

<script>
emailjs.init("wZTywPl0PCxMDKQ-4");
const SHEET_URL = "https://script.google.com/macros/s/AKfycbz8hq73uhzYSQzkGJYEY86S7SQ1wL8GDEAMgM8yVJbPXBIahP6SH1FzHD9Eq5AqMCGD/exec"; // Replace with your URL
let pendingUser = null;
let manualVerifyIndex = null;

function customAlert(message) {
  alert("Infinity Check-In & Out System says\n\n" + message);
}

function getUsers() {
  return JSON.parse(localStorage.getItem("users") || "[]");
}
function saveUsers(users) {
  localStorage.setItem("users", JSON.stringify(users));
}
function getLogs() {
  return JSON.parse(localStorage.getItem("logs") || "[]");
}
function saveLogs(logs) {
  localStorage.setItem("logs", JSON.stringify(logs));
}
function getAdminPassword() {
  return localStorage.getItem("adminPassword") || "12345";
}

function logLogin(username) {
  const log = `${new Date().toLocaleString()} â€” ${username} signed in`;
  const logs = getLogs();
  logs.unshift(log);
  saveLogs(logs);
  logToSheet(log);
}

function renderUserTable(users = getUsers()) {
  const table = document.getElementById("user-list");
  const filter = document.getElementById("user-search")?.value.trim().toLowerCase() || "";
  table.innerHTML = "";

  users.forEach((u, i) => {
    if (u.username.toLowerCase().includes(filter)) {
      table.innerHTML += `
        <tr>
          <td>${u.username}</td>
          <td><input value="${u.email}" onchange="editUserEmail(${i}, this.value)"></td>
          <td>${u.verified ? (u.disabled ? "Disabled" : "Active") : "Unverified"}</td>
          <td>
            <button onclick="toggleUser(${i})">${u.disabled ? "Enable" : "Disable"}</button>
            <button onclick="deleteUser(${i})">Delete</button>
            <input placeholder="New password" onchange="editUserPassword(${i}, this.value)">
            <br><button onclick="sendVerificationTo(${i})">Send Verification Code</button>
          </td>
        </tr>`;
    }
  });
}

function filterUsers() {
  renderUserTable();
}
function showSignUp() {
  document.getElementById("login-form").classList.add("hidden");
  document.getElementById("signup-form").classList.remove("hidden");
}
function cancelSignUp() {
  document.getElementById("signup-form").classList.add("hidden");
  document.getElementById("login-form").classList.remove("hidden");
}
function signIn() {
  const username = document.getElementById("login-username").value.trim();
  const password = document.getElementById("login-password").value.trim();

  if (username === "Admin" && password === getAdminPassword()) {
    logLogin("Admin");
    showAdminPanel();
    return;
  }

  const users = getUsers();
  const user = users.find(u => u.username === username && u.password === password);
  if (!user) return customAlert("User not found.");
  if (!user.verified) return customAlert("Email not verified.");
  if (user.disabled) return customAlert("Account disabled.");

  logLogin(user.username);
  showUserPanel(user);
}
function showUserPanel(user) {
  document.getElementById("user-name").textContent = user.username;
  document.getElementById("login-form").classList.add("hidden");
  document.getElementById("user-panel").classList.remove("hidden");
}
function showAdminPanel() {
  renderUserTable();
  const logs = getLogs();
  document.getElementById("log-container").innerHTML = logs.map(l => `<div>${l}</div>`).join("") || "No logs";
  document.getElementById("login-form").classList.add("hidden");
  document.getElementById("admin-panel").classList.remove("hidden");
}
setInterval(() => {
  if (!document.getElementById("admin-panel").classList.contains("hidden")) {
    renderUserTable();
  }
}, 5000);

function sendEmail(to, code) {
  emailjs.send("service_yrp70s8", "template_bdywmca", {
    to_email: to,
    verification_code: code
  }).then(() => customAlert("Email sent."), err => customAlert("Error: " + err.text));
}
function sendVerificationTo(i) {
  const users = getUsers();
  const user = users[i];
  if (!user.code) user.code = Math.floor(100000 + Math.random() * 900000).toString();
  saveUsers(users);
  sendEmail(user.email, user.code);
  setTimeout(() => {
    manualVerifyIndex = i;
    document.getElementById("manual-verification-panel").classList.remove("hidden");
    document.getElementById("manual-verification-username").textContent = `Verifying user: ${user.username}`;
  }, 5000);
}
function adminVerifyUserCode() {
  const enteredCode = document.getElementById("manual-code-input").value.trim();
  if (manualVerifyIndex === null) return customAlert("No user selected.");
  const users = getUsers();
  const user = users[manualVerifyIndex];
  if (enteredCode === user.code) {
    user.verified = true;
    saveUsers(users);
    customAlert(`User ${user.username} verified successfully.`);
    manualVerifyIndex = null;
    document.getElementById("manual-verification-panel").classList.add("hidden");
    showAdminPanel();
  } else {
    customAlert("Incorrect verification code.");
  }
}
function cancelManualVerification() {
  manualVerifyIndex = null;
  document.getElementById("manual-verification-panel").classList.add("hidden");
}
function changeAdminPassword() {
  const newPass = document.getElementById("new-admin-password").value.trim();
  if (newPass.length < 4) return customAlert("Too short.");
  localStorage.setItem("adminPassword", newPass);
  customAlert("Admin password updated.");
}
function toggleUser(i) {
  const users = getUsers();
  users[i].disabled = !users[i].disabled;
  saveUsers(users);
  showAdminPanel();
}
function deleteUser(i) {
  const users = getUsers();
  if (confirm("Delete user?")) {
    users.splice(i, 1);
    saveUsers(users);
    showAdminPanel();
  }
}
function editUserEmail(i, val) {
  const users = getUsers();
  users[i].email = val;
  saveUsers(users);
}
function editUserPassword(i, val) {
  const users = getUsers();
  if (val.trim()) {
    users[i].password = val;
    saveUsers(users);
    customAlert("Password updated.");
  }
}
function createUser() {
  const u = document.getElementById("new-username").value.trim();
  const e = document.getElementById("new-email").value.trim();
  const p = document.getElementById("new-password").value.trim();
  const users = getUsers();
  if (!u || !e || !p) return customAlert("Fill all fields.");
  if (users.find(x => x.username === u)) return customAlert("Username exists.");
  const newUser = { username: u, email: e, password: p, verified: true, disabled: false };
  users.push(newUser);
  saveUsers(users);
  syncUserToSheet(newUser);
  document.getElementById("new-username").value = "";
  document.getElementById("new-email").value = "";
  document.getElementById("new-password").value = "";
  showAdminPanel();
}
function resetUsers() {
  if (confirm("Delete all users and logs?")) {
    localStorage.removeItem("users");
    localStorage.removeItem("logs");
    customAlert("Reset complete.");
    showAdminPanel();
  }
}
function signOut() {
  ["login-form", "signup-form", "verify-form", "user-panel", "admin-panel", "manual-verification-panel"].forEach(id =>
    document.getElementById(id).classList.add("hidden")
  );
  document.getElementById("login-form").classList.remove("hidden");
}
function goToForm() {
  window.open("https://forms.gle/LDVAbSH9JDPmsaE59", "_blank");
}

function syncUserToSheet(user) {
  fetch(SHEET_URL, {
    method: "POST",
    body: JSON.stringify({
      type: "user",
      username: user.username,
      email: user.email,
      password: user.password,
      verified: user.verified,
      disabled: user.disabled
    }),
    headers: { "Content-Type": "application/json" }
  }).then(res => res.text()).then(console.log);
}

function logToSheet(logMessage) {
  fetch(SHEET_URL, {
    method: "POST",
    body: JSON.stringify({ type: "log", log: logMessage }),
    headers: { "Content-Type": "application/json" }
  }).then(res => res.text()).then(console.log);
}

function syncAllToSheet() {
  const users = getUsers();
  users.forEach(user => syncUserToSheet(user));
  customAlert("All users synced to Google Sheets.");
}

function importUsersFromSheet() {
  fetch(SHEET_URL)
    .then(res => res.json())
    .then(users => {
      saveUsers(users);
      customAlert("Users imported from Google Sheets.");
      showAdminPanel();
    })
    .catch(err => customAlert("Failed to fetch users: " + err.message));
}
</script>
</body>
</html>
